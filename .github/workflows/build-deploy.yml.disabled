# name: Build and Deploy Code

# on: [push, pull_request]

# jobs:
#   build:
#     environment:
#       name: Testing
#     runs-on: ubuntu-latest
#     env:
#       DATABASE_USERNAME: postgres
#       DATABASE_PASSWORD: postgres
#       DATABASE_HOST: localhost
#       DATABASE_PORT: 5432
#       DATABASE_NAME: test_db
#       SECRET_KEY: ${{ secrets.SECRET_KEY }}
#       ALGORITHM: ${{ secrets.ALGORITHM }}
#       ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

#     services:
#       postgres:
#         image: postgres:latest
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: test_db
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd "pg_isready -U postgres"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.12"

#       - name: Update pip
#         run: python -m pip install --upgrade pip

#       - name: Install dependencies
#         run: pip install -r requirements.txt

#       - name: Wait for PostgreSQL to be ready
#         run: sleep 15

# - name: Login to Docker Hub
#   uses: docker/login-action@v3
#   with:
#     username: ${{ secrets.DOCKER_HUB_USERNAME }}
#     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

# - name: Set up Docker Buildx
#   uses: docker/setup-buildx-action@v3

# - name: Build and push
#   uses: docker/build-push-action@v6
#   with:
#     push: true
#     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ryze:latest

# deploy:
#   runs-on: ubuntu-latest
#   needs: build
#   environment:
#     name: Production
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: SSH and deploy to the Ubuntu server
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.PROD_HOST }}
#         username: ${{ secrets.PROD_USERNAME }}
#         password: ${{ secrets.PROD_PASSWORD }}
#         port: 22
#         script: |
#           cd /home/dane/app/src  # Use the correct path where your app is located
#           git pull
#           echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart ryzeapi
